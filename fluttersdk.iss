; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#include "environment.iss"

#ifndef FlutterSdkVersion
#define FlutterSdkVersion "3.0.0"
#endif

[Setup]
AppName=Flutter SDK
AppVersion={#FlutterSdkVersion}
WizardStyle=modern
DefaultDirName=C:\flutter
DefaultGroupName=Flutter SDK
ChangesEnvironment=true
OutputBaseFilename=FlutterSDK-setup-{#SetupSetting("AppVersion")}
LicenseFile=license.txt
ExtraDiskSpaceRequired=1760936591

[Files]
Source: "{tmp}\flutter_windows_{#SetupSetting("AppVersion")}-stable.zip"; DestDir: "{tmp}"; Flags: external
Source: "7za.exe"; DestDir: "{tmp}"; Flags: deleteafterinstall
Source: "7za.dll"; DestDir: "{tmp}"; Flags: deleteafterinstall
Source: "7zxa.dll"; DestDir: "{tmp}"; Flags: deleteafterinstall
Source: "movefiles.bat"; DestDir: "{tmp}"; Flags: deleteafterinstall

[Run]
Filename: "{tmp}\7za.exe"; Parameters: "x {tmp}\flutter_windows_{#SetupSetting("AppVersion")}-stable.zip -o{tmp}\flutter_windows_{#SetupSetting("AppVersion")}-stable"
Filename: "{tmp}\movefiles.bat"; Parameters: "{tmp}\flutter_windows_{#SetupSetting("AppVersion")}-stable\flutter {app}"
Filename: "{cmd}"; Description: "Run Flutter Doctor"; Parameters: "/k flutter doctor"; Flags: postinstall nowait skipifsilent unchecked

[UninstallDelete]
Type: filesandordirs; Name: "{app}\.git"
Type: filesandordirs; Name: "{app}\.github"
Type: filesandordirs; Name: "{app}\.idea"
Type: filesandordirs; Name: "{app}\.pub-cache"
Type: filesandordirs; Name: "{app}\bin"
Type: filesandordirs; Name: "{app}\dev"
Type: filesandordirs; Name: "{app}\examples"
Type: filesandordirs; Name: "{app}\packages"
Type: filesandordirs; Name: "{app}\.ci.yaml"
Type: filesandordirs; Name: "{app}\.cirrus.yml"
Type: filesandordirs; Name: "{app}\.gitignore"
Type: filesandordirs; Name: "{app}\.gitattributes"
Type: filesandordirs; Name: "{app}\analysis_options.yaml"
Type: filesandordirs; Name: "{app}\AUTHORS"
Type: filesandordirs; Name: "{app}\CODEOWNERS"
Type: filesandordirs; Name: "{app}\CODE_OF_CONDUCT.md"
Type: filesandordirs; Name: "{app}\CONTRIBUTING.md"
Type: filesandordirs; Name: "{app}\dartdoc_options.yaml"
Type: filesandordirs; Name: "{app}\flutter_console.bat"
Type: filesandordirs; Name: "{app}\flutter_root.iml"
Type: filesandordirs; Name: "{app}\LICENSE"
Type: filesandordirs; Name: "{app}\PATENT_GRANT"
Type: filesandordirs; Name: "{app}\README.md"
Type: filesandordirs; Name: "{app}\TESTOWNERS"
Type: filesandordirs; Name: "{app}\version"

[Code]
var DownloadPage: TDownloadWizardPage;

function OnDownloadProgress(const Url, FileName: String; const Progress, ProgressMax: Int64): Boolean;
begin
  if Progress = ProgressMax then
    Log(Format('Successfully downloaded file to {tmp}: %s', [FileName]));
  Result := True;
end;

procedure InitializeWizard;
begin
  DownloadPage := CreateDownloadPage(SetupMessage(msgWizardPreparing), SetupMessage(msgPreparingDesc), @OnDownloadProgress);
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if CurPageID = wpReady then begin
    DownloadPage.Clear;
    DownloadPage.Add('https://storage.googleapis.com/flutter_infra_release/releases/stable/windows/flutter_windows_' + ExpandConstant('{#SetupSetting("AppVersion")}') + '-stable.zip', 'flutter_windows_' + ExpandConstant('{#SetupSetting("AppVersion")}') + '-stable.zip', '');
    DownloadPage.Show;
    try
      try
        DownloadPage.Download; // This downloads the files to {tmp}
        Result := True;
      except
        if DownloadPage.AbortedByUser then
          Log('Aborted by user.')
        else
          SuppressibleMsgBox(AddPeriod(GetExceptionMessage), mbCriticalError, MB_OK, IDOK);
        Result := False;
      end;
    finally
      DownloadPage.Hide;
    end;
  end else
    Result := True;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
    if CurStep = ssPostInstall then begin 
      EnvAddPath(ExpandConstant('{app}') +'\bin');
    end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
    if CurUninstallStep = usPostUninstall then begin
      EnvRemovePath(ExpandConstant('{app}') +'\bin');
    end;
end;